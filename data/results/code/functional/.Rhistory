library(ggplot2)
library(ggpubr)
ggplot(df_plot, aes(x = depth, y = n)) +
geom_boxplot(alpha = 0.5, outlier.shape = NA) +
geom_point(position = position_jitter(width = 0.1)) +
stat_compare_means(comparisons = list(c("SRF", "DCM"), c("SRF", "MES"), c("DCM", "MES")),
method = "wilcox.test", exact = F) +
labs(x = "", y = "Number of exclusive terms by sample")
get_exclusive_distribution_station <- function(depth, comparison) {
sapply(unique(dict$station[dict$depth == depth]), function(x) {
get(paste0("data_", depth, ".", x)) %>%
pull(Annotation) %>%
base::setdiff(.,comparison) -> gos
select(GO.db, keys = gos, columns = "ONTOLOGY", keytype = "GOID") %>%
filter(ONTOLOGY == "BP") %>%
pull(GOID) %>%
unique() %>%
length()
})
}
MES_exclusive_distribution_station <- get_exclusive_distribution_station("MES", SRF_DCM)
SRF_exclusive_distribution_station <- get_exclusive_distribution_station("SRF", DCM_MES)
DCM_exclusive_distribution_station <- get_exclusive_distribution_station("DCM", SRF_MES)
# Plotar
build_df <- function(v, depth) {
data.frame(n = unname(v), depth = depth)
}
df_plot <- bind_rows(build_df(SRF_exclusive_distribution_station, "SRF"),
build_df(DCM_exclusive_distribution_station, "DCM"),
build_df(MES_exclusive_distribution_station, "MES"))
df_plot$depth <- factor(df_plot$depth, levels = c("SRF", "DCM", "MES"))
df_plot$station <- names(MES_exclusive_distribution_station)
df_plot <- unique(df_plot)
library(ggplot2)
library(ggpubr)
ggplot(df_plot, aes(x = depth, y = n)) +
geom_boxplot(alpha = 0.5, outlier.shape = NA) +
geom_point(position = position_jitter(width = 0.1)) +
stat_compare_means(comparisons = list(c("SRF", "DCM"), c("SRF", "MES"), c("DCM", "MES")),
method = "wilcox.test", exact = F) +
labs(x = "", y = "Number of exclusive terms in each depth layer by station")
# Carregando as bibliotecas
library(data.table); library(dplyr); library(tidyr); library(ggplot2); library(pals); library(GO.db);
library(data.table); library(TreeAndLeaf); library(RedeR); library(igraph); library(GOSemSim);
library(RColorBrewer); library(classInt); library(wordcloud2); library(purrr); library(ggpubr)
# Carregando as bibliotecas
library(data.table); library(dplyr); library(tidyr); library(ggplot2); library(pals); library(GO.db);
library(data.table); library(TreeAndLeaf); library(RedeR); library(igraph); library(GOSemSim);
library(RColorBrewer); library(classInt); library(wordcloud2); library(purrr); library(ggpubr)
# Carregando as bibliotecas
library(data.table); library(dplyr); library(tidyr); library(ggplot2); library(pals);
library(GO.db); library(TreeAndLeaf); library(RedeR); library(igraph); library(GOSemSim);
library(RColorBrewer); library(classInt); library(wordcloud2); library(purrr); library(ggpubr)
##############################################################################################################
########################################### Definicao de variaveis ###########################################
##############################################################################################################
path="/home/biancasantiago/Documentos/meta_taraocean/data/results/version02_final/code/functional/functional/"
data_SRF$depth <- "SRF"
data_DCM$depth <- "DCM"
data_MES$depth <- "MES"
df <- bind_rows(data_SRF, data_DCM, data_MES)
# Quais os principais processos exclusivos de cada camada?ERR599077
df %>%
group_by(Annotation) %>%
mutate(exclusive = n()) %>%
ungroup() %>%
arrange(desc(exclusive), desc(n)) -> df2
# Quantos processos biológios são exclusivos de cada camada?
df2 %>%
filter(exclusive == 1) %>%
group_by(depth) %>%
summarise(n())
# Dicionário amostras/camadas
dict <- read.table("~/Documentos/meta_taraocean/data/results/version02_final/code/functional/runstationdepth.txt",
header = T, sep = "\t", colClasses = rep("character", 3))
# Unição de termos em comum por combinação de camadas
SRF_DCM <- union(data_DCM$Annotation, data_SRF$Annotation)
SRF_MES <- union(data_SRF$Annotation, data_MES$Annotation)
DCM_MES <- union(data_DCM$Annotation, data_MES$Annotation)
# Função para obter o número de termos exclusivos em cada amostra de uma camada
# em comparação aos termos das outras camadas
get_exclusive_distribution_sample <- function(depth, comparison) {
sapply(dict$run[dict$depth == depth], function(x) {
get(paste0("counted_", x)) %>%
pull(Annotation) %>%
base::setdiff(.,comparison) -> gos
select(GO.db, keys = gos, columns = "ONTOLOGY", keytype = "GOID") %>%
filter(ONTOLOGY == "BP") %>%
pull(GOID) %>%
unique() %>%
length()
})
}
MES_exclusive_distribution_sample <- get_exclusive_distribution_sample("MES", SRF_DCM)
SRF_exclusive_distribution_sample <- get_exclusive_distribution_sample("SRF", DCM_MES)
DCM_exclusive_distribution_sample <- get_exclusive_distribution_sample("DCM", SRF_MES)
# Pegar descrição de quais termos são exclusivos de cada camada (para citar no paper)
get_exclusive_distribution_TERMS <- function(x, y) {
gos <- setdiff(x, y)
select(GO.db, keys = gos, columns = c("TERM", "ONTOLOGY"), keytype = "GOID") %>%
filter(ONTOLOGY == "BP")
}
MES_exclusive_distribution_TERMS <- get_exclusive_distribution_TERMS(x = unique(data_MES$Annotation),
y = unique(c(data_DCM$Annotation, data_SRF$Annotation)))
SRF_exclusive_distribution_TERMS <- get_exclusive_distribution_TERMS(x = unique(data_SRF$Annotation),
y = unique(c(data_DCM$Annotation, data_MES$Annotation)))
DCM_exclusive_distribution_TERMS <- get_exclusive_distribution_TERMS(x = unique(data_DCM$Annotation),
y = unique(c(data_MES$Annotation, data_SRF$Annotation)))
# Plotar
build_df <- function(v, depth) {
data.frame(n = unname(v), depth = depth)
}
df_plot <- bind_rows(build_df(SRF_exclusive_distribution_sample, "SRF"),
build_df(DCM_exclusive_distribution_sample, "DCM"),
build_df(MES_exclusive_distribution_sample, "MES"))
df_plot$depth <- factor(df_plot$depth, levels = c("SRF", "DCM", "MES"))
df_plot
ggplot(df_plot, aes(x = depth, y = n)) +
geom_boxplot(alpha = 0.5, outlier.shape = NA) +
geom_point(position = position_jitter(width = 0.1)) +
stat_compare_means(comparisons = list(c("SRF", "DCM"), c("SRF", "MES"), c("DCM", "MES")),
method = "wilcox.test", exact = F) +
labs(x = "", y = "Number of exclusive terms by sample")
exc_term <- ggplot(df_plot, aes(x = depth, y = n)) +
geom_boxplot(alpha = 0.5, outlier.shape = NA) +
geom_point(position = position_jitter(width = 0.1)) +
stat_compare_means(comparisons = list(c("SRF", "DCM"), c("SRF", "MES"), c("DCM", "MES")),
method = "wilcox.test", exact = F) +
labs(x = "", y = "Number of exclusive terms by sample")
exc_term
rm(exc_term)
exc_term_sample <- ggplot(df_plot, aes(x = depth, y = n)) +
geom_boxplot(alpha = 0.5, outlier.shape = NA) +
geom_point(position = position_jitter(width = 0.1)) +
stat_compare_means(comparisons = list(c("SRF", "DCM"), c("SRF", "MES"), c("DCM", "MES")),
method = "wilcox.test", exact = F) +
labs(x = "", y = "Number of exclusive terms by sample")
exc_term_sample
### Salvando imagens (PDF)
ggsave(filename = "plots/pdf/mounting/exc_term_sample.pdf", exc_term_sample,
width = 15, height = 10, dpi = 500, units = "cm", device='pdf')
### Salvando imagens (PNG)
ggsave(filename = "plots/png/mounting/exc_term_sample.png", exc_term_sample,
width = 15, height = 10, dpi = 500, units = "cm", device='png')
### Salvando imagens (SVG)
exc_term_sample
dev.copy(svg,"plots/svg/mounting/exc_term_sample.svg", width = 7, height = 5)
dev.off()
get_exclusive_distribution_station <- function(depth, comparison) {
sapply(unique(dict$station[dict$depth == depth]), function(x) {
get(paste0("data_", depth, ".", x)) %>%
pull(Annotation) %>%
base::setdiff(.,comparison) -> gos
select(GO.db, keys = gos, columns = "ONTOLOGY", keytype = "GOID") %>%
filter(ONTOLOGY == "BP") %>%
pull(GOID) %>%
unique() %>%
length()
})
}
MES_exclusive_distribution_station <- get_exclusive_distribution_station("MES", SRF_DCM)
SRF_exclusive_distribution_station <- get_exclusive_distribution_station("SRF", DCM_MES)
DCM_exclusive_distribution_station <- get_exclusive_distribution_station("DCM", SRF_MES)
# Plotar
build_df <- function(v, depth) {
data.frame(n = unname(v), depth = depth)
}
df_plot <- bind_rows(build_df(SRF_exclusive_distribution_station, "SRF"),
build_df(DCM_exclusive_distribution_station, "DCM"),
build_df(MES_exclusive_distribution_station, "MES"))
df_plot$depth <- factor(df_plot$depth, levels = c("SRF", "DCM", "MES"))
df_plot$station <- names(MES_exclusive_distribution_station)
df_plot <- unique(df_plot)
ggplot(df_plot, aes(x = depth, y = n)) +
geom_boxplot(alpha = 0.5, outlier.shape = NA) +
geom_point(position = position_jitter(width = 0.1)) +
stat_compare_means(comparisons = list(c("SRF", "DCM"), c("SRF", "MES"), c("DCM", "MES")),
method = "wilcox.test", exact = F) +
labs(x = "", y = "Number of exclusive terms in each depth layer by station")
exc_term_station <- ggplot(df_plot, aes(x = depth, y = n)) +
geom_boxplot(alpha = 0.5, outlier.shape = NA) +
geom_point(position = position_jitter(width = 0.1)) +
stat_compare_means(comparisons = list(c("SRF", "DCM"), c("SRF", "MES"), c("DCM", "MES")),
method = "wilcox.test", exact = F) +
labs(x = "", y = "Number of exclusive terms in each depth layer by station")
exc_term_station
### Salvando imagens (PDF)
ggsave(filename = "plots/pdf/mounting/exc_term_station.pdf", exc_term_station,
width = 15, height = 10, dpi = 500, units = "cm", device='pdf')
### Salvando imagens (PNG)
ggsave(filename = "plots/png/mounting/exc_term_station.png", exc_term_station,
width = 15, height = 10, dpi = 500, units = "cm", device='png')
### Salvando imagens (SVG)
exc_term_station
dev.copy(svg,"plots/svg/mounting/exc_term_station.svg", width = 7, height = 5)
dev.off()
# Carregando as bibliotecas
library(data.table); library(dplyr); library(tidyr); library(ggplot2); library(pals);
library(GO.db); library(TreeAndLeaf); library(RedeR); library(igraph); library(GOSemSim);
# Carregando as bibliotecas
library(data.table); library(dplyr); library(tidyr); library(ggplot2); library(pals);
library(GO.db); library(TreeAndLeaf); library(RedeR); library(igraph); library(GOSemSim);
library(RColorBrewer); library(classInt); library(wordcloud2); library(purrr); library(ggpubr)
library(RColorBrewer); library(classInt); library(wordcloud2); library(purrr); library(ggpubr)
library(GO.db); library(TreeAndLeaf); library(RedeR); library(igraph); library(GOSemSim);
library(GO.db);  library(RedeR); library(igraph); library(GOSemSim);
library(GO.db);  library(GOSemSim);
library(GO.db);  library(GOSemSim);
library(RColorBrewer); library(classInt); library(wordcloud2); library(purrr); library(ggpubr)
exc_term_station
exc_term_station
dev.copy(png,"plots/svg/mounting/test.png", width = 7, height = 5)
dev.off()
### Salvando imagens (PNG)
ggsave(filename = "plots/png/mounting/exc_term_station.png", exc_term_station,
width = 15, height = 10, dpi = 100, units = "cm", device='png')
### Salvando imagens (PNG)
ggsave(filename = "plots/png/mounting/exc_term_station2.png", exc_term_station,
width = 15, height = 10, dpi = 500, units = "cm", device='png')
### Salvando imagens (PDF)
ggsave(filename = "plots/pdf/mounting/exc_term_station.pdf", exc_term_station,
width = 15, height = 10, dpi = 100, units = "cm", device='pdf')
### Salvando imagens (PNG)
ggsave(filename = "plots/png/mounting/exc_term_station.png", exc_term_station,
width = 15, height = 10, dpi = 500, units = "cm", device='png')
### Salvando imagens (PDF)
ggsave(filename = "plots/pdf/mounting/exc_term_station.pdf", exc_term_station,
width = 10, height = 15, dpi = 100, units = "cm", device='pdf')
### Salvando imagens (PNG)
ggsave(filename = "plots/png/mounting/exc_term_station.png", exc_term_station,
width = 10, height = 15, dpi = 500, units = "cm", device='png')
### Salvando imagens (PDF)
ggsave(filename = "plots/pdf/mounting/exc_term_station.pdf", exc_term_station,
width = 10, height = 10, dpi = 100, units = "cm", device='pdf')
### Salvando imagens (PNG)
ggsave(filename = "plots/png/mounting/exc_term_station.png", exc_term_station,
width = 10, height = 10, dpi = 500, units = "cm", device='png')
### Salvando imagens (PDF)
ggsave(filename = "plots/pdf/mounting/exc_term_station.pdf", exc_term_station,
width = 10, height = 12, dpi = 100, units = "cm", device='pdf')
### Salvando imagens (PNG)
ggsave(filename = "plots/png/mounting/exc_term_station.png", exc_term_station,
width = 10, height = 12, dpi = 500, units = "cm", device='png')
### Salvando imagens (PDF)
ggsave(filename = "plots/pdf/mounting/exc_term_station.pdf", exc_term_station,
width = 15, height = 12, dpi = 500, units = "cm", device='pdf')
### Salvando imagens (PNG)
ggsave(filename = "plots/png/mounting/exc_term_station.png", exc_term_station,
width = 1, height = 12, dpi = 500, units = "cm", device='png')
### Salvando imagens (PDF)
ggsave(filename = "plots/pdf/mounting/exc_term_station.pdf", exc_term_station,
width = 15, height = 12, dpi = 500, units = "cm", device='pdf')
### Salvando imagens (PDF)
ggsave(filename = "plots/pdf/mounting/exc_term_station.pdf", exc_term_station,
width = 15, height = 12, dpi = 100, units = "cm", device='pdf')
### Salvando imagens (PNG)
ggsave(filename = "plots/png/mounting/exc_term_station.png", exc_term_station,
width = 1, height = 12, dpi = 100, units = "cm", device='png')
### Salvando imagens (PDF)
ggsave(filename = "plots/pdf/mounting/exc_term_station.pdf", exc_term_station,
width = 10, height = 12, dpi = 100, units = "cm", device='pdf')
### Salvando imagens (PNG)
ggsave(filename = "plots/png/mounting/exc_term_station.png", exc_term_station,
width = 10, height = 12, dpi = 500, units = "cm", device='png')
### Salvando imagens (PNG)
ggsave(filename = "plots/png/mounting/exc_term_station.png", exc_term_station,
width = 15, height = 12, dpi = 500, units = "cm", device='png')
### Salvando imagens (PDF)
ggsave(filename = "plots/pdf/mounting/exc_term_station.pdf", exc_term_station,
width = 10, height = 12, dpi = 500, units = "cm", device='pdf')
### Salvando imagens (PDF)
ggsave(filename = "plots/pdf/mounting/exc_term_station.pdf", exc_term_station,
width = 10, height = 12, dpi = 500, units = "cm", device='pdf')
# Carregando as bibliotecas
library(data.table); library(dplyr); library(tidyr); library(ggplot2); library(pals);
library(GO.db); library(TreeAndLeaf); library(RedeR); library(igraph); library(GOSemSim);
# Carregando as bibliotecas
library(data.table); library(dplyr); library(tidyr); library(ggplot2); library(pals);
library(GO.db); library(TreeAndLeaf); library(RedeR); library(igraph); library(GOSemSim);
library(RColorBrewer); library(classInt); library(wordcloud2); library(purrr); library(ggpubr)
# Carregando as bibliotecas
library(data.table); library(dplyr); library(tidyr); library(ggplot2); library(pals);
library(GO.db); library(TreeAndLeaf); library(RedeR); library(igraph); library(GOSemSim);
library(RColorBrewer); library(classInt); library(wordcloud2); library(purrr); library(ggpubr)
View(data_SRF)
##### Concatenando dataframes por camada
data_SRF <- rbind(data_SRF.064,data_SRF.065,data_SRF.068,data_SRF.076,data_SRF.078,data_SRF.098,data_SRF.111,data_SRF.112)
data_DCM <- rbind(data_DCM.064,data_DCM.065,data_DCM.068,data_DCM.076,data_DCM.078,data_DCM.098,data_DCM.111,data_DCM.112)
data_MES <- rbind(data_MES.064,data_MES.065,data_MES.068,data_MES.076,data_MES.078,data_MES.098,data_MES.111,data_MES.112)
View(data_SRF)
View(data_DCM)
View(data_MES)
data_terms <- cbind(data_SRF, data_DCM, data_MES)
View(data_terms)
rm(data_terms)
##### Exporatando dataframes
for(depth in depths){
for(station in stations){
data_name <- get(paste0("data_",depth))
vari_name <- paste0("data_",depth,".csv")
write.table(data_name, file = paste0(vari_name), sep = "\t", na = "", quote = FALSE, row.names = FALSE)
}
}
##### Somando colunas por termos iguais
for(depth in depths){
data_name <- get(paste0("data_",depth))
vari_name <- paste0("data_",depth)
# data_name <- aggregate(x = data_name, by = list(Annotation), FUN = "sum")
assign(vari_name, aggregate(n ~ desc, data_name, sum))
rm(data_name, vari_name, depth)
}
##### Ordenando dataframes
for(depth in depths){
data_name <- get(paste0("data_",depth))
vari_name <- paste0("data_",depth)
assign(vari_name, data_name[order(data_name$n, decreasing = TRUE),])
rm(data_name, vari_name, depth)
}
##### Criando dataframes de cada camada para as nuvens
for(depth in depths){
data_name <- get(paste0("data_",depth))
vari_name <- paste0("cloud_",depth)
assign(vari_name, data_name[1:50,])
}
##### Plotando nuvens das camadas
plot.cloud_SRF <- wordcloud2(data=cloud_SRF, size=0.25, minRotation = -pi/1,
fontFamily = 'Segoe UI', fontWeight = 'normal',
maxRotation = -pi/1, rotateRatio = 0, color="random-dark",
backgroundColor="white", shape="circle",  ellipticity = 0.5)
plot.cloud_DCM <- wordcloud2(data=cloud_DCM, size=0.25, minRotation = -pi/1,
fontFamily = 'Segoe UI', fontWeight = 'normal',
maxRotation = -pi/1, rotateRatio = 0, color="random-dark",
backgroundColor="white", shape="circle",  ellipticity = 0.5)
plot.cloud_MES <- wordcloud2(data=cloud_MES, size=0.25, minRotation = -pi/1,
fontFamily = 'Segoe UI', fontWeight = 'normal',
maxRotation = -pi/1, rotateRatio = 0, color="random-dark",
backgroundColor="white", shape="circle",  ellipticity = 0.5)
plot.cloud_SRF
plot.cloud_DCM
plot.cloud_MES
View(data_SRF)
View(data_DCM)
View(data_MES)
##### Exporatando dataframes
for(depth in depths){
for(station in stations){
data_name <- get(paste0("data_",depth))
vari_name <- paste0("data_",depth,".csv")
write.table(data_name, file = paste0(vari_name), sep = "\t", na = "", quote = FALSE, row.names = FALSE)
}
}
MES_exclusive_distribution_sample
View(MES_exclusive_distribution_sample)
MES_exclusive_distribution_TERMS
SRF_exclusive_distribution_TERMS
SRF_exclusive_distribution_TERMS
DCM_exclusive_distribution_TERMS
MES_exclusive_distribution_TERMS
vIEW(SRF_exclusive_distribution_TERMS)
View(SRF_exclusive_distribution_TERMS)
View(SRF_exclusive_distribution_TERMS)
for(depth in depths){
for(station in stations){
data_name <- get(paste0(depth,"_exclusive_distribution_TERMS"))
vari_name <- paste0(depth,"_exclusive_distribution_TERMS.csv")
write.table(data_name, file = paste0(vari_name), sep = "\t", na = "", quote = FALSE, row.names = FALSE)
}
}
##### Exportando dataframes
for(depth in depths){
for(station in stations){
data_name <- get(paste0("data_",depth))
vari_name <- paste0("terms_",depth,".csv")
write.table(data_name, file = paste0("terms/",vari_name), sep = "\t", na = "", quote = FALSE, row.names = FALSE)
}
}
for(depth in depths){
for(station in stations){
data_name <- get(paste0(depth,"_exclusive_distribution_TERMS"))
vari_name <- paste0("exc_terms_",depth,".csv")
write.table(data_name, file = paste0("terms/",vari_name), sep = "\t", na = "", quote = FALSE, row.names = FALSE)
}
}
##############################################################################################################
########################################### Definicao de variaveis ###########################################
##############################################################################################################
path="~/meta_taraocean/data/results/input/functional/"
runs <- c("ERR594324","ERR598972","ERR599023","ERR599025","ERR594385","ERR599021","ERR599164","ERR598970",
"ERR599088","ERR599150","ERR594392","ERR594291","ERR598990","ERR599018","ERR599110","ERR594382",
"ERR594414","ERR598960","ERR599034","ERR594320","ERR598979","ERR599146","ERR594359","ERR594361",
"ERR599017","ERR599056","ERR599103","ERR594294","ERR594348","ERR594415","ERR598947","ERR599131",
"ERR594302","ERR599129","ERR599171","ERR599174","ERR594318","ERR594297","ERR594391","ERR599040",
"ERR599148","ERR594321","ERR594298","ERR594355","ERR599000","ERR599154","ERR594333","ERR599010",
"ERR599126","ERR594310","ERR594286","ERR594354","ERR599046","ERR599101","ERR594336","ERR594303",
"ERR599124","ERR599159","ERR594289","ERR599006","ERR599022","ERR594340","ERR594332","ERR594411",
"ERR599042","ERR599079","ERR599071","ERR599085","ERR599093","ERR599120","ERR598961","ERR599086",
"ERR599077","ERR598957","ERR599072","ERR598954")
names_runs <- c("T064 - 594324","T064 - 598972","T064 - 599023","T064 - 599025","T064 - 594385","T064 - 599021",
"T064 - 599164","T064 - 598970","T064 - 599088","T064 - 599150","T064 - 594392","T065 - 594291",
"T065 - 598990","T065 - 599018","T065 - 599110","T065 - 594382","T065 - 594414","T065 - 598960",
"T065 - 599034","T065 - 594320","T065 - 598979","T065 - 599146","T065 - 594359","T065 - 594361",
"T068 - 599017","T068 - 599056","T068 - 599103","T068 - 594294","T068 - 594348","T068 - 594415",
"T068 - 598947","T068 - 599131","T068 - 594302","T068 - 599129","T068 - 599171","T068 - 599174",
"T068 - 594318","T068 - 594297","T068 - 594391","T076 - 599040","T076 - 599148","T076 - 594321",
"T076 - 594298","T076 - 594355","T076 - 599000","T076 - 599154","T076 - 594333","T076 - 599010",
"T076 - 599126","T076 - 594310","T076 - 594286","T076 - 594354","T078 - 599046","T078 - 599101",
"T078 - 594336","T078 - 594303","T078 - 599124","T078 - 599159","T078 - 594289","T078 - 599006",
"T078 - 599022","T078 - 594340","T078 - 594332","T078 - 594411","T098 - 599042","T098 - 599079",
"T098 - 599071","T098 - 599085","T098 - 599093","T098 - 599120","T111 - 598961","T111 - 599086",
"T111 - 599077","T112 - 598957","T112 - 599072","T112 - 598954")
depths <- c("SRF","DCM","MES")
stations <- c("064","065","068","076","078","098","111","112")
stations_tt <- c("064","064","064","064","064","064","064","064","064","064","064","065","065","065",
"065","065","065","065","065","065","065","065","065","065","068","068","068","068",
"068","068","068","068","068","068","068","068","068","068","068","076","076","076",
"076","076","076","076","076","076","076","076","076","076","078","078","078","078",
"078","078","078","078","078","078","078","078","098","098","098","098","098","098",
"111","111","111","112","112","112")
depths_tt <- c("DCM","DCM","DCM","DCM","DCM","MES","MES","SRF","SRF","SRF","SRF","DCM","DCM","DCM",
"DCM","DCM","DCM","MES","MES","SRF","SRF","SRF","SRF","SRF","DCM","DCM","DCM","DCM",
"DCM","DCM","MES","MES","MES","SRF","SRF","SRF","SRF","SRF","SRF","DCM","DCM","DCM",
"DCM","DCM","MES","MES","MES","SRF","SRF","SRF","SRF","SRF","DCM","DCM","DCM","DCM",
"MES","MES","MES","SRF","SRF","SRF","SRF","SRF","DCM","DCM","MES","MES","SRF","SRF",
"DCM","MES","SRF","DCM","MES","SRF")
##### Resgatando Amostras
for (run in runs) {
file_name <- paste0(path,"counted_",run,".txt")
vari_name <- paste0("counted_",run)
assign(vari_name, fread(file_name, sep = "\t", header = FALSE, stringsAsFactors = FALSE))
rm(file_name, vari_name, run)
}
# Carregando as bibliotecas
library(data.table); library(dplyr); library(tidyr); library(ggplot2); library(pals);
library(GO.db); library(TreeAndLeaf); library(RedeR); library(igraph); library(GOSemSim);
library(RColorBrewer); library(classInt); library(wordcloud2); library(purrr); library(ggpubr)
##############################################################################################################
########################################### Definicao de variaveis ###########################################
##############################################################################################################
path="~/meta_taraocean/data/results/input/functional/"
runs <- c("ERR594324","ERR598972","ERR599023","ERR599025","ERR594385","ERR599021","ERR599164","ERR598970",
"ERR599088","ERR599150","ERR594392","ERR594291","ERR598990","ERR599018","ERR599110","ERR594382",
"ERR594414","ERR598960","ERR599034","ERR594320","ERR598979","ERR599146","ERR594359","ERR594361",
"ERR599017","ERR599056","ERR599103","ERR594294","ERR594348","ERR594415","ERR598947","ERR599131",
"ERR594302","ERR599129","ERR599171","ERR599174","ERR594318","ERR594297","ERR594391","ERR599040",
"ERR599148","ERR594321","ERR594298","ERR594355","ERR599000","ERR599154","ERR594333","ERR599010",
"ERR599126","ERR594310","ERR594286","ERR594354","ERR599046","ERR599101","ERR594336","ERR594303",
"ERR599124","ERR599159","ERR594289","ERR599006","ERR599022","ERR594340","ERR594332","ERR594411",
"ERR599042","ERR599079","ERR599071","ERR599085","ERR599093","ERR599120","ERR598961","ERR599086",
"ERR599077","ERR598957","ERR599072","ERR598954")
names_runs <- c("T064 - 594324","T064 - 598972","T064 - 599023","T064 - 599025","T064 - 594385","T064 - 599021",
"T064 - 599164","T064 - 598970","T064 - 599088","T064 - 599150","T064 - 594392","T065 - 594291",
"T065 - 598990","T065 - 599018","T065 - 599110","T065 - 594382","T065 - 594414","T065 - 598960",
"T065 - 599034","T065 - 594320","T065 - 598979","T065 - 599146","T065 - 594359","T065 - 594361",
"T068 - 599017","T068 - 599056","T068 - 599103","T068 - 594294","T068 - 594348","T068 - 594415",
"T068 - 598947","T068 - 599131","T068 - 594302","T068 - 599129","T068 - 599171","T068 - 599174",
"T068 - 594318","T068 - 594297","T068 - 594391","T076 - 599040","T076 - 599148","T076 - 594321",
"T076 - 594298","T076 - 594355","T076 - 599000","T076 - 599154","T076 - 594333","T076 - 599010",
"T076 - 599126","T076 - 594310","T076 - 594286","T076 - 594354","T078 - 599046","T078 - 599101",
"T078 - 594336","T078 - 594303","T078 - 599124","T078 - 599159","T078 - 594289","T078 - 599006",
"T078 - 599022","T078 - 594340","T078 - 594332","T078 - 594411","T098 - 599042","T098 - 599079",
"T098 - 599071","T098 - 599085","T098 - 599093","T098 - 599120","T111 - 598961","T111 - 599086",
"T111 - 599077","T112 - 598957","T112 - 599072","T112 - 598954")
depths <- c("SRF","DCM","MES")
stations <- c("064","065","068","076","078","098","111","112")
stations_tt <- c("064","064","064","064","064","064","064","064","064","064","064","065","065","065",
"065","065","065","065","065","065","065","065","065","065","068","068","068","068",
"068","068","068","068","068","068","068","068","068","068","068","076","076","076",
"076","076","076","076","076","076","076","076","076","076","078","078","078","078",
"078","078","078","078","078","078","078","078","098","098","098","098","098","098",
"111","111","111","112","112","112")
depths_tt <- c("DCM","DCM","DCM","DCM","DCM","MES","MES","SRF","SRF","SRF","SRF","DCM","DCM","DCM",
"DCM","DCM","DCM","MES","MES","SRF","SRF","SRF","SRF","SRF","DCM","DCM","DCM","DCM",
"DCM","DCM","MES","MES","MES","SRF","SRF","SRF","SRF","SRF","SRF","DCM","DCM","DCM",
"DCM","DCM","MES","MES","MES","SRF","SRF","SRF","SRF","SRF","DCM","DCM","DCM","DCM",
"MES","MES","MES","SRF","SRF","SRF","SRF","SRF","DCM","DCM","MES","MES","SRF","SRF",
"DCM","MES","SRF","DCM","MES","SRF")
##### Resgatando Amostras
for (run in runs) {
file_name <- paste0(path,"counted_",run,".txt")
vari_name <- paste0("counted_",run)
assign(vari_name, fread(file_name, sep = "\t", header = FALSE, stringsAsFactors = FALSE))
rm(file_name, vari_name, run)
}
##### Renomeando colunas
for (run in runs) {
data_name <- get(paste0("counted_",run))
names(data_name)[1:2] <- c("Annotation", "n")
assign(paste0("counted_",run), data_name)
rm(data_name, run)
}
##### Ordenando dataframes
for (run in runs) {
data_name <- get(paste0("counted_",run))
vari_name <- paste0("counted_",run)
assign(vari_name, data_name[order(data_name$n, decreasing = TRUE), ])
rm(data_name, vari_name, run)
}
##### Resgatando os 501 mais frequentes (incluindo os indefinidos)
for (run in runs) {
data_name <- get(paste0("counted_",run))
vari_name <- paste0("counted_",run)
assign(vari_name, data_name[1:501,])
rm(data_name, vari_name, run)
}
##### Removendo os indefinidos
for (run in runs) {
data_name <- get(paste0("counted_",run))
vari_name <- paste0("counted_",run)
assign(vari_name, subset(data_name, Annotation != "Unknown"))   #for unclassified data
# assign(vari_name, subset(data_name, !is.na(data_name[,1])))             #for N.A. data
rm(data_name, vari_name, run)
}
