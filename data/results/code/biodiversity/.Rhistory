theme(plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(vjust=0.6))
taxo_kingdom
save(data_kingdom, prop_depth, prop_SRF, prop_DCM, prop_MES, Layers,
prop_PERCENT, sample_kingdom, condition_kingdom, value_kingdom,
dataplot_kingdom, mat_pal_kgd, taxo_kingdom, file = "prop_depth.RData")
setwd("~/Documentos/meta_taraocean/data/results/version02_final/code/clusters/biodiversity")
load("~/Documentos/meta_taraocean/data/results/version02_final/code/clusters/biodiversity/.RData")
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggpubr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggpubr)
data_kingdom$depth <- sapply(strsplit(rownames(data_kingdom), split = " - "), "[[" , 1)
data_kingdom$samples <- as.character(sapply(strsplit(rownames(data_kingdom), split = " - "), "[[" , 3))
data_kingdom %>%
pivot_longer(Viruses:Archaea, names_to = "domain", values_to = "n") %>%
group_by(samples) %>%
mutate(total_samples = sum(n), prop = round(n/total_samples, 4),
depth = factor(depth, levels = c("SRF", "DCM", "MES"))) -> data_kingdom2
data_kingdom2 %>%
ggplot(aes(x = depth, y = prop)) +
geom_boxplot() +
facet_wrap(~domain) +
stat_compare_means(method = "wilcox.test",
comparisons = list(c("SRF", "DCM"), c("SRF", "MES"), c("DCM", "MES")))
View(data_kingdom)
View(data_kingdom2)
data_kingdom2
prop_domain <-
data_kingdom2 %>%
ggplot(aes(x = depth, y = prop)) +
geom_boxplot() +
facet_wrap(~domain) +
stat_compare_means(method = "wilcox.test",
comparisons = list(c("SRF", "DCM"), c("SRF", "MES"), c("DCM", "MES")))
prop_domain
### Salvando imagens (PNG)
ggsave(filename = "plots/png/mounting/prop_domain.png", prop_domain,
width = 15, height = 10, dpi = 500, units = "cm", device='png')
### Salvando imagens (PDF)
ggsave(filename = "plots/pdf/mounting/prop_domain.pdf", prop_domain,
width = 15, height = 10, dpi = 500, units = "cm", device='pdf')
### Salvando imagens (PNG)
ggsave(filename = "plots/png/mounting/prop_domain.png", prop_domain,
width = 15, height = 10, dpi = 500, units = "cm", device='png')
### Salvando imagens (SVG)
prop_domain
dev.copy(svg,"plots/svg/mounting/prop_domain.svg", width = 7, height = 5)
dev.off()
##### CARREGANDO PACOTES
library(dplyr); library(tidyr); library(pals); library(plyr); library(FactoMineR); library(ggplot2);
library(ggdendro); library(cluster); library(factoextra); library(stats); #library(devtools);
library(dendextend); library(MultivariateAnalysis); library(vegan); library(ggpubr); library(vegan);
library(tidyverse); library(forcats); library(iNEXT); library(scales); library(patchwork)
##### CARREGANDO PACOTES
library(dplyr); library(tidyr); library(pals); library(plyr); library(FactoMineR); library(ggplot2);
library(ggdendro); library(cluster); library(factoextra); library(stats); #library(devtools);
library(dendextend); library(MultivariateAnalysis); library(vegan); library(ggpubr); library(vegan);
library(tidyverse); library(forcats); library(iNEXT); library(scales); library(patchwork)
view(data_kingdom)
data_prop_kingdom <- data_kingdom
data_prop_kingdom$depth <- sapply(strsplit(rownames(data_prop_kingdom), split = " - "), "[[" , 1)
data_prop_kingdom$samples <- as.character(sapply(strsplit(rownames(data_prop_kingdom), split = " - "), "[[" , 3))
data_prop_kingdom %>%
pivot_longer(Viruses:Archaea, names_to = "domain", values_to = "n") %>%
group_by(samples) %>%
mutate(total_samples = sum(n), prop = round(n/total_samples, 4),
depth = factor(depth, levels = c("SRF", "DCM", "MES"))) -> data_prop_kingdom_plot
prop_domain <-
data_prop_kingdom_plot %>%
ggplot(aes(x = depth, y = prop)) +
geom_boxplot() +
facet_wrap(~domain) +
stat_compare_means(method = "wilcox.test",
comparisons = list(c("SRF", "DCM"), c("SRF", "MES"), c("DCM", "MES")))
prop_domain
### Salvando imagens (PDF)
ggsave(filename = "plots/pdf/mounting/prop_domain.pdf", prop_domain,
width = 15, height = 10, dpi = 500, units = "cm", device='pdf')
### Salvando imagens (PNG)
ggsave(filename = "plots/png/mounting/prop_domain.png", prop_domain,
width = 15, height = 10, dpi = 500, units = "cm", device='png')
### Salvando imagens (SVG)
prop_domain
dev.copy(svg,"plots/svg/mounting/prop_domain.svg", width = 7, height = 5)
dev.off()
View(data_kingdom)
View(data_prop_kingdom)
##### CARREGANDO PACOTES
library(dplyr); library(tidyr); library(pals); library(plyr); library(FactoMineR); library(ggplot2);
library(ggdendro); library(cluster); library(factoextra); library(stats); #library(devtools);
library(dendextend); library(MultivariateAnalysis); library(vegan); library(ggpubr); library(vegan);
library(tidyverse); library(forcats); library(iNEXT); library(scales); library(patchwork)
prop_domain
### Salvando imagens (PNG)
ggsave(filename = "plots/png/mounting/prop_domain.png", prop_domain,
width = 10, height = 15, dpi = 500, units = "cm", device='png')
prop_domain <-
data_prop_kingdom_plot %>%
ggplot(aes(x = depth, y = prop)) +
geom_boxplot() +
facet_wrap(~domain) +
labs(y = "Proportion", x = "Layers") +
stat_compare_means(method = "wilcox.test",
comparisons = list(c("SRF", "DCM"), c("SRF", "MES"), c("DCM", "MES")))
prop_domain <-
data_prop_kingdom_plot %>%
ggplot(aes(x = depth, y = prop)) +
geom_boxplot() +
facet_wrap(~domain) +
labs(y = "Proportion", x = "Layers") +
stat_compare_means(method = "wilcox.test",
comparisons = list(c("SRF", "DCM"), c("SRF", "MES"), c("DCM", "MES")))
prop_domain
prop_domain <-
data_prop_kingdom_plot %>%
ggplot(aes(x = depth, y = prop)) +
geom_boxplot() +
facet_wrap(~domain) +
labs(y = "Proportion", x = "Layers") +
scale_color_manual(labels = c("SRF", "DCM", "MES"),
values = c("#303F9F","#D32F2F","#FFA000")) +
scale_fill_manual(labels = c("SRF", "DCM", "MES"),
values = c("#40C4FF","#F06292","#FFD600")) +
stat_compare_means(method = "wilcox.test",
comparisons = list(c("SRF", "DCM"), c("SRF", "MES"), c("DCM", "MES")))
prop_domain
rm prop_domain
rm(prop_domain)
prop_domain <-
data_prop_kingdom_plot %>%
ggplot(aes(x = depth, y = prop)) +
geom_boxplot() +
facet_wrap(~domain) +
labs(y = "Proportion", x = "Layers") +
scale_color_manual(labels = c("SRF", "DCM", "MES"),
values = c("#303F9F","#D32F2F","#FFA000")) +
scale_fill_manual(labels = c("SRF", "DCM", "MES"),
values = c("#40C4FF","#F06292","#FFD600")) +
stat_compare_means(method = "wilcox.test",
comparisons = list(c("SRF", "DCM"), c("SRF", "MES"), c("DCM", "MES")))
prop_domain
data_prop_kingdom_plot %>%
ggplot(aes(x = depth, y = prop)) +
geom_boxplot(scale_color_manual(labels = c("SRF", "DCM", "MES"),
values = c("#303F9F","#D32F2F","#FFA000")) +
scale_fill_manual(labels = c("SRF", "DCM", "MES"),
values = c("#40C4FF","#F06292","#FFD600"))) +
facet_wrap(~domain) +
labs(y = "Proportion", x = "Layers") +
stat_compare_means(method = "wilcox.test",
comparisons = list(c("SRF", "DCM"), c("SRF", "MES"), c("DCM", "MES")))
prop_domain <-
data_prop_kingdom_plot %>%
ggplot(aes(x = depth, y = prop)) +
geom_boxplot(scale_color_manual(labels = c("SRF", "DCM", "MES"),
values = c("#303F9F","#D32F2F","#FFA000")) +
scale_fill_manual(labels = c("SRF", "DCM", "MES"),
values = c("#40C4FF","#F06292","#FFD600"))) +
facet_wrap(~domain) +
labs(y = "Proportion", x = "Layers") +
stat_compare_means(method = "wilcox.test",
comparisons = list(c("SRF", "DCM"), c("SRF", "MES"), c("DCM", "MES")))
prop_domain <-
data_prop_kingdom_plot %>%
ggplot(aes(x = depth, y = prop)) +
geom_boxplot(scale_color_manual(labels = c("SRF", "DCM", "MES"),
values = c("#303F9F","#D32F2F","#FFA000")) +
scale_fill_manual(labels = c("SRF", "DCM", "MES"),
values = c("#40C4FF","#F06292","#FFD600"))) +
facet_wrap(~domain) +
labs(y = "Proportion", x = "Layers") +
stat_compare_means(method = "wilcox.test",
comparisons = list(c("SRF", "DCM"), c("SRF", "MES"), c("DCM", "MES")))
prop_domain <-
data_prop_kingdom_plot %>%
ggplot(aes(x = depth, y = prop)) +
geom_boxplot() +
facet_wrap(~domain) +
labs(y = "Proportion", x = "Layers") +
stat_compare_means(method = "wilcox.test",
comparisons = list(c("SRF", "DCM"), c("SRF", "MES"), c("DCM", "MES")))
prop_domain
prop_domain <-
data_prop_kingdom_plot %>%
ggplot(aes(x = depth, y = prop, color = Layers)) +
geom_boxplot(aes(fill = Layers)) +
scale_color_manual(labels = c("SRF", "DCM", "MES"),
values = c("#303F9F","#D32F2F","#FFA000")) +
scale_fill_manual(labels = c("SRF", "DCM", "MES"),
values = c("#40C4FF","#F06292","#FFD600")) +
facet_wrap(~domain) +
labs(y = "Proportion", x = "Layers") +
stat_compare_means(method = "wilcox.test",
comparisons = list(c("SRF", "DCM"), c("SRF", "MES"), c("DCM", "MES")))
prop_domain
prop_domain <-
data_prop_kingdom_plot %>%
ggplot(aes(x = depth, y = prop)) +
geom_boxplot(aes(fill = Layers)) +
scale_color_manual(labels = c("SRF", "DCM", "MES"),
values = c("#303F9F","#D32F2F","#FFA000")) +
scale_fill_manual(labels = c("SRF", "DCM", "MES"),
values = c("#40C4FF","#F06292","#FFD600")) +
facet_wrap(~domain) +
labs(y = "Proportion", x = "Layers") +
stat_compare_means(method = "wilcox.test",
comparisons = list(c("SRF", "DCM"), c("SRF", "MES"), c("DCM", "MES")))
prop_domain
Layers
prop_domain <-
data_prop_kingdom_plot %>%
ggplot(aes(x = depth, y = prop, colors(Layers))) +
geom_boxplot(aes(fill = Layers)) +
scale_color_manual(labels = c("SRF", "DCM", "MES"),
values = c("#303F9F","#D32F2F","#FFA000")) +
scale_fill_manual(labels = c("SRF", "DCM", "MES"),
values = c("#40C4FF","#F06292","#FFD600")) +
facet_wrap(~domain) +
labs(y = "Proportion", x = "Layers") +
stat_compare_means(method = "wilcox.test",
comparisons = list(c("SRF", "DCM"), c("SRF", "MES"), c("DCM", "MES")))
prop_domain
prop_domain <-
data_prop_kingdom_plot %>%
ggplot(aes(x = depth, y = prop)) +
geom_boxplot(aes(fill = Layers)) +
scale_color_manual(labels = c("SRF", "DCM", "MES"),
values = c("#303F9F","#D32F2F","#FFA000")) +
scale_fill_manual(labels = c("SRF", "DCM", "MES"),
values = c("#40C4FF","#F06292","#FFD600")) +
facet_wrap(~domain) +
labs(y = "Proportion", x = "Layers") +
stat_compare_means(method = "wilcox.test",
comparisons = list(c("SRF", "DCM"), c("SRF", "MES"), c("DCM", "MES")))
prop_domain
prop_domain <-
data_prop_kingdom_plot %>%
ggplot(aes(x = depth, y = prop)) +
geom_boxplot(aes(fill = Layers),outlier.shape=NA) +
scale_color_manual(labels = c("SRF", "DCM", "MES"),
values = c("#303F9F","#D32F2F","#FFA000")) +
scale_fill_manual(labels = c("SRF", "DCM", "MES"),
values = c("#40C4FF","#F06292","#FFD600")) +
facet_wrap(~domain) +
labs(y = "Proportion", x = "Layers") +
stat_compare_means(method = "wilcox.test",
comparisons = list(c("SRF", "DCM"), c("SRF", "MES"), c("DCM", "MES")))
prop_domain
prop_domain <-
data_prop_kingdom_plot %>%
ggplot(aes(x = depth, y = prop)) +
geom_boxplot() +
facet_wrap(~domain) +
labs(y = "Proportion", x = "Layers") +
stat_compare_means(method = "wilcox.test",
comparisons = list(c("SRF", "DCM"), c("SRF", "MES"), c("DCM", "MES")))
prop_domain
### Salvando imagens (PDF)
ggsave(filename = "plots/pdf/mounting/prop_domain.pdf", prop_domain,
width = 10, height = 15, dpi = 500, units = "cm", device='pdf')
### Salvando imagens (PNG)
ggsave(filename = "plots/png/mounting/prop_domain.png", prop_domain,
width = 10, height = 15, dpi = 500, units = "cm", device='png')
### Salvando imagens (SVG)
prop_domain
dev.copy(svg,"plots/svg/mounting/prop_domain.svg", width = 5, height = 7)
dev.off()
##### DEFININDO VARIAVEIS
path="~/meta_taraocean/data/results/input/taxonomic/"
taxons <- c("kingdom", "phylum", "class", "order", "family", "genus", "species")
runs <- c("ERR594324","ERR598972","ERR599023","ERR599025","ERR594385","ERR599021","ERR599164","ERR598970",
"ERR599088","ERR599150","ERR594392","ERR594291","ERR598990","ERR599018","ERR599110","ERR594382",
"ERR594414","ERR598960","ERR599034","ERR594320","ERR598979","ERR599146","ERR594359","ERR594361",
"ERR599017","ERR599056","ERR599103","ERR594294","ERR594348","ERR594415","ERR598947","ERR599131",
"ERR594302","ERR599129","ERR599171","ERR599174","ERR594318","ERR594297","ERR594391","ERR599040",
"ERR599148","ERR594321","ERR594298","ERR594355","ERR599000","ERR599154","ERR594333","ERR599010",
"ERR599126","ERR594310","ERR594286","ERR594354","ERR599046","ERR599101","ERR594336","ERR594303",
"ERR599124","ERR599159","ERR594289","ERR599006","ERR599022","ERR594340","ERR594332","ERR594411",
"ERR599042","ERR599079","ERR599071","ERR599085","ERR599093","ERR599120","ERR598961","ERR599086",
"ERR599077","ERR598957","ERR599072","ERR598954")
stations <- c("064","064","064","064","064","064","064","064","064","064","064","065","065","065",
"065","065","065","065","065","065","065","065","065","065","068","068","068","068",
"068","068","068","068","068","068","068","068","068","068","068","076","076","076",
"076","076","076","076","076","076","076","076","076","076","078","078","078","078",
"078","078","078","078","078","078","078","078","098","098","098","098","098","098",
"111","111","111","112","112","112")
oceans <- c("IO","IO","IO","IO","IO","IO","IO","IO","IO","IO","IO","IO","IO","IO",
"IO","IO","IO","IO","IO","IO","IO","IO","IO","IO","SAO","SAO","SAO","SAO",
"SAO","SAO","SAO","SAO","SAO","SAO","SAO","SAO","SAO","SAO","SAO","SAO","SAO","SAO",
"SAO","SAO","SAO","SAO","SAO","SAO","SAO","SAO","SAO","SAO","SAO","SAO","SAO","SAO",
"SAO","SAO","SAO","SAO","SAO","SAO","SAO","SAO","SPO","SPO","SPO","SPO","SPO","SPO",
"SPO","SPO","SPO","SPO","SPO","SPO")
depths <- c("DCM","DCM","DCM","DCM","DCM","MES","MES","SRF","SRF","SRF","SRF","DCM","DCM","DCM",
"DCM","DCM","DCM","MES","MES","SRF","SRF","SRF","SRF","SRF","DCM","DCM","DCM","DCM",
"DCM","DCM","MES","MES","MES","SRF","SRF","SRF","SRF","SRF","SRF","DCM","DCM","DCM",
"DCM","DCM","MES","MES","MES","SRF","SRF","SRF","SRF","SRF","DCM","DCM","DCM","DCM",
"MES","MES","MES","SRF","SRF","SRF","SRF","SRF","DCM","DCM","MES","MES","SRF","SRF",
"DCM","MES","SRF","DCM","MES","SRF")
latitude <- c("-29,5333","-29,5333","-29,5333","-29,5333","-29,5333","-29,5046",
"-29,5046","-29,5019","-29,5019","-29,5019","-29,5019","-35,2421",
"-35,2421","-35,2421","-35,2421","-35,2421","-35,2421","-35,1889",
"-35,1889","-35,1728","-35,1728","-35,1728","-35,1728","-35,1728",
"-31,027","-31,027","-31,027","-31,027","-31,027","-31,027",
"-31,0198","-31,0198","-31,0198","-31,0266","-31,0266","-31,0266",
"-31,0266","-31,0266","-31,0266","-21,0292","-21,0292","-21,0292",
"-21,0292","-21,0292","-20,9315","-20,9315","-20,9315","-20,9354",
"-20,9354","-20,9354","-20,9354","-20,9354","-30,1484","-30,1484",
"-30,1484","-30,1484","-30,1471","-30,1471","-30,1471","-30,1367",
"-30,1367","-30,1367","-30,1367","-30,1367","-25,826","-25,826",
"-25,8076","-25,8076","-25,8051","-25,8051","-16,9587","-16,9486",
"-16,9601","-23,2189","-23,2232","-23,2811")
longitude <- c("37,9117","37,9117","37,9117","37,9117","37,9117","37,9599",
"37,9599","37,9889","37,9889","37,9889","37,9889","26,3048",
"26,3048","26,3048","26,3048","26,3048","26,3048","26,2905",
"26,2905","26,2868","26,2868","26,2868","26,2868","26,2868",
"4,6802","4,6802","4,6802","4,6802","4,6802","4,6802",
"4,6685","4,6685","4,6685","4,665","4,665","4,665",
"4,665","4,665","4,665","-35,3498","-35,3498","-35,3498",
"-35,3498","-35,3498","-35,1794","-35,1794","-35,1794","-35,1803",
"-35,1803","-35,1803","-35,1803","-35,1803","-43,2705","-43,2705",
"-43,2705","-43,2705","-43,2915","-43,2915","-43,2915","-43,2899",
"-43,2899","-43,2899","-43,2899","-43,2899","-111,7294","-111,7294",
"-111,6906","-111,6906","-111,7202","-111,7202","-100,6751","-100,6715",
"-100,6335","-129,4997","-129,5986", "-129,3947")
prof_meters <- c("65","65","65","65","65","1000","1000","5","5","5",
"5","30","30","30","30","30","30","850","850","5",
"5","5","5","5","50","50","50","50","50","50",
"700","700","700","5","5","5","5","5","5","150",
"150","150","150","150","800","800","800","5","5","5",
"5","5","120","120","120","120","800","800","800","5",
"5","5","5","5","188","188","488","488","5","5",
"90","350","5","155","696","5")
data_time <- c("2010-07-08T06:21","2010-07-08T06:21","2010-07-08T06:21","2010-07-08T06:21",
"2010-07-08T06:21","2010-07-07T12:13:35","2010-07-07T12:13:35","2010-07-07T04:48",
"2010-07-07T04:48","2010-07-07T04:48","2010-07-07T04:48","2010-07-12T11:03:22",
"2010-07-12T11:03:22","2010-07-12T11:03:22","2010-07-12T11:03:22","2010-07-12T11:03:22",
"2010-07-12T11:03:22","2010-07-12T06:46:23","2010-07-12T06:46:23","2010-07-12T05:59",
"2010-07-12T05:59","2010-07-12T05:59","2010-07-12T05:59","2010-07-12T05:59",
"2010-09-14T13:30","2010-09-14T13:30","2010-09-14T13:30","2010-09-14T13:30",
"2010-09-14T13:30","2010-09-14T13:30","2010-09-13T13:02:33","2010-09-13T13:02:33",
"2010-09-13T13:02:33","2010-09-14T06:55","2010-09-14T06:55","2010-09-14T06:55",
"2010-09-14T06:55","2010-09-14T06:55","2010-09-14T06:55","2010-10-16T16:58:37",
"2010-10-16T16:58:37","2010-10-16T16:58:37","2010-10-16T16:58:37","2010-10-16T16:58:37",
"2010-10-17T09:05:05","2010-10-17T09:05:05","2010-10-17T09:05:05","2010-10-16T09:55",
"2010-10-16T09:55","2010-10-16T09:55","2010-10-16T09:55","2010-10-16T09:55",
"2010-11-04T18:16:53","2010-11-04T18:16:53","2010-11-04T18:16:53","2010-11-04T18:16:53",
"2010-11-05T12:33:27","2010-11-05T12:33:27","2010-11-05T12:33:27","2010-11-04T10:04",
"2010-11-04T10:04","2010-11-04T10:04","2010-11-04T10:04","2010-11-04T10:04",
"2011-04-03T21:50:58","2011-04-03T21:50:58","2011-04-04T13:55:02","2011-04-04T13:55:02",
"2011-04-03T13:44","2011-04-03T13:44","2011-05-31T20:28:10","2011-06-01T16:00:59",
"2011-05-31T14:25","2011-06-15T00:55:48","2011-06-15T18:43:16","2011-06-14T16:45")
biome <- c("Coastal Biome","Coastal Biome","Coastal Biome","Coastal Biome",
"Coastal Biome","Coastal Biome","Coastal Biome","Coastal Biome",
"Coastal Biome","Coastal Biome","Coastal Biome","Coastal Biome",
"Coastal Biome","Coastal Biome","Coastal Biome","Coastal Biome",
"Coastal Biome","Coastal Biome","Coastal Biome","Coastal Biome",
"Coastal Biome","Coastal Biome","Coastal Biome","Coastal Biome",
"Trades Biome","Trades Biome","Trades Biome","Trades Biome",
"Trades Biome","Trades Biome","Trades Biome","Trades Biome",
"Trades Biome","Trades Biome","Trades Biome","Trades Biome",
"Trades Biome","Trades Biome","Trades Biome","Trades Biome",
"Trades Biome","Trades Biome","Trades Biome","Trades Biome",
"Trades Biome","Trades Biome","Trades Biome","Trades Biome",
"Trades Biome","Trades Biome","Trades Biome","Trades Biome",
"Trades Biome","Trades Biome","Trades Biome","Trades Biome",
"Trades Biome","Trades Biome","Trades Biome","Trades Biome",
"Trades Biome","Trades Biome","Trades Biome","Trades Biome",
"Trades Biome","Trades Biome","Trades Biome","Trades Biome",
"Trades Biome","Trades Biome","Trades Biome","Trades Biome",
"Trades Biome","Trades Biome","Trades Biome","Trades Biome")
shapes <- c("0","0","0","0","0","0","0","0","0","0","0","1","1","1",
"1","1","1","1","1","1","1","1","1","1","2","2","2","2",
"2","2","2","2","2","2","2","2","2","2","2","3","3","3",
"3","3","3","3","3","3","3","3","3","3","4","4","4","4",
"4","4","4","4","4","4","4","4","5","5","5","5","5","5",
"7","7","7","9","9","9")
names_runs <- c("T064 - 594324","T064 - 598972","T064 - 599023","T064 - 599025","T064 - 594385","T064 - 599021",
"T064 - 599164","T064 - 598970","T064 - 599088","T064 - 599150","T064 - 594392","T065 - 594291",
"T065 - 598990","T065 - 599018","T065 - 599110","T065 - 594382","T065 - 594414","T065 - 598960",
"T065 - 599034","T065 - 594320","T065 - 598979","T065 - 599146","T065 - 594359","T065 - 594361",
"T068 - 599017","T068 - 599056","T068 - 599103","T068 - 594294","T068 - 594348","T068 - 594415",
"T068 - 598947","T068 - 599131","T068 - 594302","T068 - 599129","T068 - 599171","T068 - 599174",
"T068 - 594318","T068 - 594297","T068 - 594391","T076 - 599040","T076 - 599148","T076 - 594321",
"T076 - 594298","T076 - 594355","T076 - 599000","T076 - 599154","T076 - 594333","T076 - 599010",
"T076 - 599126","T076 - 594310","T076 - 594286","T076 - 594354","T078 - 599046","T078 - 599101",
"T078 - 594336","T078 - 594303","T078 - 599124","T078 - 599159","T078 - 594289","T078 - 599006",
"T078 - 599022","T078 - 594340","T078 - 594332","T078 - 594411","T098 - 599042","T098 - 599079",
"T098 - 599071","T098 - 599085","T098 - 599093","T098 - 599120","T111 - 598961","T111 - 599086",
"T111 - 599077","T112 - 598957","T112 - 599072","T112 - 598954")
names_runs <- c("DCM - T064 - 594324","DCM - T064 - 598972","DCM - T064 - 599023","DCM - T064 - 599025",
"DCM - T064 - 594385","MES - T064 - 599021","MES - T064 - 599164","SRF - T064 - 598970",
"SRF - T064 - 599088","SRF - T064 - 599150","SRF - T064 - 594392","DCM - T065 - 594291",
"DCM - T065 - 598990","DCM - T065 - 599018","DCM - T065 - 599110","DCM - T065 - 594382",
"DCM - T065 - 594414","MES - T065 - 598960","MES - T065 - 599034","SRF - T065 - 594320",
"SRF - T065 - 598979","SRF - T065 - 599146","SRF - T065 - 594359","SRF - T065 - 594361",
"DCM - T068 - 599017","DCM - T068 - 599056","DCM - T068 - 599103","DCM - T068 - 594294",
"DCM - T068 - 594348","DCM - T068 - 594415","MES - T068 - 598947","MES - T068 - 599131",
"MES - T068 - 594302","SRF - T068 - 599129","SRF - T068 - 599171","SRF - T068 - 599174",
"SRF - T068 - 594318","SRF - T068 - 594297","SRF - T068 - 594391","DCM - T076 - 599040",
"DCM - T076 - 599148","DCM - T076 - 594321","DCM - T076 - 594298","DCM - T076 - 594355",
"MES - T076 - 599000","MES - T076 - 599154","MES - T076 - 594333","SRF - T076 - 599010",
"SRF - T076 - 599126","SRF - T076 - 594310","SRF - T076 - 594286","SRF - T076 - 594354",
"DCM - T078 - 599046","DCM - T078 - 599101","DCM - T078 - 594336","DCM - T078 - 594303",
"MES - T078 - 599124","MES - T078 - 599159","MES - T078 - 594289","SRF - T078 - 599006",
"SRF - T078 - 599022","SRF - T078 - 594340","SRF - T078 - 594332","SRF - T078 - 594411",
"DCM - T098 - 599042","DCM - T098 - 599079","MES - T098 - 599071","MES - T098 - 599085",
"SRF - T098 - 599093","SRF - T098 - 599120","DCM - T111 - 598961","MES - T111 - 599086",
"SRF - T111 - 599077","DCM - T112 - 598957","MES - T112 - 599072","SRF - T112 - 598954")
stations_name <- c("064","065","068","076","078","098","111","112")
depths_name <- c("SRF","DCM","MES")
indexes <- c("shannon","shannon.norm","pielou")
distances <- c("euclidean", "minkowski", "canberra")
methods <- c("single","complete","ward.D2","average")
comp_depths <- list( c("SRF", "DCM"), c("SRF", "MES"), c("DCM", "MES"))
##### Resgatando amostras
for (run in runs) {
for (taxon in taxons){
file_name <- paste0(path,taxon,"_",run,"_names.txt")
vari_name <- paste0("cluster_",run,"_",taxon)
assign(vari_name, read.csv(file_name, sep = "\t", header = FALSE, stringsAsFactors = FALSE))
rm(file_name, vari_name)
}
rm(run, taxon)
}
##### Renomeando colunas
for (run in runs) {
for (taxon in taxons){
data_name <- get(paste0("cluster_",run,"_",taxon))
names(data_name)[1:2] <- c(taxon, "n")
assign(paste0("cluster_",run,"_",taxon), data_name)
rm(data_name)
}
rm(run, taxon)
}
##### Ordenando dataframes
for (run in runs) {
for (taxon in taxons){
data_name <- get(paste0("cluster_",run,"_",taxon))
vari_name <- paste0("cluster_",run,"_",taxon)
assign(vari_name, data_name[order(data_name$n, decreasing = TRUE), ])
rm(data_name, vari_name)
}
rm(run, taxon)
}
##### Convertendo NAs
for (run in runs) {
for (taxon in taxons){
data_name <- get(paste0("cluster_",run,"_",taxon))
data_name[is.na(data_name)] <- "unclassified"
assign(paste0("cluster_",run,"_",taxon), data_name)
rm(data_name)
}
rm(run,taxon)
}
##### Excluindo os indefinidos
for (run in runs) {
for (taxon in taxons){
data_name <- get(paste0("cluster_",run,"_",taxon))
vari_name <- paste0("cluster_",run,"_",taxon)
assign(vari_name, subset(data_name, data_name[,1] != "unclassified"))   #for unclassified data
# assign(vari_name, subset(data_name, !is.na(data_name[,1])))             #for N.A. data
rm(data_name, vari_name)
}
rm(run, taxon)
}
##### Transpondo os dataframes
for (run in runs) {
for (taxon in taxons){
data_name <- get(paste0("cluster_",run,"_",taxon))
vari_name <- paste0("trans_",run,"_",taxon)
assign(vari_name, as.data.frame(t(data_name)))
rm(data_name, vari_name)
}
rm(run, taxon)
}
##### Resgatando os nomes para as colunas
for (run in runs) {
for (taxon in taxons){
data_name <- get(paste0("cluster_",run,"_",taxon))
vari_name <- paste0("colnames_",run,"_",taxon)
assign(vari_name, data_name[,1])
rm(data_name, vari_name)
}
rm(run, taxon)
}
##### Renomeando colunas
for (run in runs) {
for (taxon in taxons){
data_name1 <- get(paste0("trans_",run,"_",taxon))
data_name2 <- get(paste0("colnames_",run,"_",taxon))
names(data_name1) <- data_name2
assign(paste0("trans_",run,"_",taxon), data_name1)
rm(data_name1, data_name2)
}
rm(run, taxon)
}
##### Removendo a linha com os nomes das colunas
for (run in runs) {
for (taxon in taxons){
data_name <- get(paste0("trans_",run,"_",taxon))
vari_name <- paste0("trans_",run,"_",taxon)
data_name = data_name[-1,]
assign(vari_name, data_name)
rm(data_name)
}
rm(run, taxon)
}
