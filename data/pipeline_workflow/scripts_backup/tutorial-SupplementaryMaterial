Tutorial - Supplementary Material

*LINKS:
https://github.com/ncbi/sra-tools/wiki
https://github.com/OpenGene/fastp


4 - Folder structure

--> Preparando ambiente de trabalho
 
*** MKDIR
-> Comando para criar um diretório em árvore (com todos os seus diretórios internos):

#Instalação:
Comando nativo do Linux

#Uso: 
mkdir -p ./<diretorioraiz/{diretoriofilhoa1/{diretorioneto1},diretoriofilho2} etc...

#Aplicação:
mkdir -p ./Protocol/{data/{assembled,collapsed,removal/{index,reference},trimmed},alignment/{db,index},taxonomic,functional}

*** TREE
-> Comando para visualizar um diretório em árvore (com todos os seus diretórios internos):

#Instalação:
sudo apt-get install tree

#Uso: 
tree <nomedodiretorioraiz>

#Aplicação:
tree Protocol

#Resultado:
|-- Protocol
	|-- alignment
		|-- db
		|-- index
	|-- data
		|-- assembled
		|-- collapsed
		|-- removal
			|-- index
			|-- reference
		|-- trimmed

	|-- functional	
	|-- taxonomic


5 - Preprocessing

--> Baixando arquivos e verificando arquivos do NCBI

*** PREFETCH
-> Comando para download dos arquivos de amostra de leitura de sequência SRA do NCBI

#Instalação:
sudo apt install sra-toolkit

#Uso:
prefetch Sequence-run-ID 

#Aplicação:
prefetch SRR579292

*** VDB-VALIDATE
-> Comando para executar a validação básica para garantir a integridade de um arquivo de dados SRA baixado. Se todas as tabelas e colunas forem relatadas como "ok" e "consistente", os dados estarão corretos. Se algum aspecto do arquivo falhar na validação, ele deverá ser adquirido novamente do SRA.

#Instalação
Já instalado no pacote sra-toollkit

#Uso:
vdb-validate [options] <path/file> [<path/file> ...]
vdb-validate [options] <accession>

#Aplicação:
vdb-validate SRR579292/SRR579292.sra


*** FASTERQ-DUMP
-> A ferramenta fasterq-dump usa arquivos temporários e multi-threading para acelerar a extração do FASTQ de acessos ao SRA. A ferramenta produz arquivos de saída denominados 'SRR000001_1.fastq' e 'SRR000001_2.fastq' no diretório atual.

#Instalação:
Já instalado no pacote sra-toollkit

#Uso:
fasterq-dump Sequence-run-ID
	#Saída:
	Sequence-run-ID_1.fastq e Sequence-run-ID_2.fastq

#Aplicação:
fasterq-dump SRR579292
	#Saída:
	SRR579292_1.fastq e SRR579292_2.fastq
	spots read      : 661,480
	reads read      : 1,322,960
	reads written   : 1,322,960


--> Removendo sequências e adaptadores de baixa qualidade:

*** FATSP
-> O fastp é uma ferramenta de pré-processamento de dados FASTQ. O algoritmo possui funções para controle de qualidade, corte de adaptadores, filtragem por qualidade e remoção de leitura. Ele também suporta multi-threading. Os autores afirmam que fastp é mais rápido que outras ferramentas de pré-processamento FASQ

#Instalação:
conda install -c bioconda fastp

#Parâmetros
-i e -I: arquivos de entrada
-o e -O: arquivos de saída
-q: a filtragem de qualidade é ativada por padrão. Se essa opção for especificada, a filtragem de qualidade será desativada
-w: número da linha de trabalho, o padrão é 2
-h: nome do arquivo de relatório no formato html
-j: nome do arquivo de relatório no formato json
--detect_adapter_for_pe: por padrão, a detecção automática de sequência do adaptador é ativada apenas para dados SE, ative esta opção para ativá-la para dados PE.
----- Nota: Na chamada fastp, o argumento -q define o limite do índice de qualidade phred e -w especifica o número de threads a serem usados ​​(adapte esses argumentos, se necessário).

#Uso:
	- para dados finais únicos (não compactados)
	fastp -i in.fq -o out.fq
	- para dados finais emparelhados (compactado com gzip)
	fastp -i in.R1.fq.gz -I in.R2.fq.gz -o out.R1.fq.gz -O out.R2.fq.gz

#Aplicação:
fastp -i SRR579292_1.fastq -I SRR579292_2.fastq -o trimmed/SRR579292_1_trim.fastq -O trimmed/SRR579292_2_trim.fastq -q 20 -w 8 --detect_adapter_for_pe -h trimmed/report.html -j trimmed/fastp.json


--> Genoma Referência: Um genoma de referência do Homo sapiens é necessário para remover as seqüências hospedeiras desses dados.

*** WGET
#Instalação:
Comando nativo do Linux

#Uso:
wget <link de download>

#Aplicação:
wget ftp://ftp.ensembl.org/pub/release-98/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz

*** GZIP
#Instalação:
sudo apt install pigz

#Parâmetros:
-d: descompactar
-p: número de threads

#Uso:
pigz <nome do arquivo>
pigz -d <nome do arquivo> -p <numero de threads>

#Aplicação:
pigz -d Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz -p 8


############ COMENTAR ############

bowtie2-build Homo_sapiens.GRCh38.dna.primary_assembly.fa ../index/host --threads 8

############ 6. ALIGNMENT ############


